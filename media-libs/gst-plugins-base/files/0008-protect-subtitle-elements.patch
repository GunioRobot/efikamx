diff -Naur a/gst/playback/gstdecodebin2.c b/gst/playback/gstdecodebin2.c
--- a/gst/playback/gstdecodebin2.c	2009-11-12 01:45:58.457417420 +0000
+++ b/gst/playback/gstdecodebin2.c	2009-11-12 01:54:16.574923729 +0000
@@ -143,8 +143,9 @@
 
   GValueArray *factories;       /* factories we can use for selecting elements */
 
-  GList *subtitles;             /* List of elements with subtitle-encoding,
-                                 * protected by object lock! */
+   GMutex *subtitle_lock;        /* Protects changes to subtitles and encoding */
+   GList *subtitles;             /* List of elements with subtitle-encoding,
+                                  * protected by above mutex! */
 
   gboolean have_type;           /* if we received the have_type signal */
   guint have_type_id;           /* signal id for have-type from typefind */
@@ -280,6 +281,23 @@
     g_mutex_unlock (GST_DECODE_BIN_CAST(dbin)->dyn_lock);		\
 } G_STMT_END
 
+#define SUBTITLE_LOCK(dbin) G_STMT_START {				\
+    GST_LOG_OBJECT (dbin,						\
+		    "subtitle locking from thread %p",			\
+		    g_thread_self ());					\
+    g_mutex_lock (GST_DECODE_BIN_CAST(dbin)->subtitle_lock);		\
+    GST_LOG_OBJECT (dbin,						\
+		    "subtitle lock from thread %p",			\
+		    g_thread_self ());					\
+} G_STMT_END
+
+#define SUBTITLE_UNLOCK(dbin) G_STMT_START {				\
+    GST_LOG_OBJECT (dbin,						\
+		    "subtitle unlocking from thread %p",		\
+		    g_thread_self ());					\
+    g_mutex_unlock (GST_DECODE_BIN_CAST(dbin)->subtitle_lock);		\
+} G_STMT_END
+
 /* GstDecodeGroup
  *
  * Streams belonging to the same group/chain of a media file
@@ -735,6 +753,8 @@
   decode_bin->shutdown = FALSE;
   decode_bin->blocked_pads = NULL;
 
+  decode_bin->subtitle_lock = g_mutex_new ();
+
   decode_bin->caps =
       gst_caps_from_string ("video/x-raw-yuv;video/x-raw-rgb;video/x-raw-gray;"
       "audio/x-raw-int;audio/x-raw-float;" "text/plain;text/x-pango-markup;"
@@ -786,6 +806,11 @@
     decode_bin->dyn_lock = NULL;
   }
 
+  if (decode_bin->subtitle_lock) {
+    g_mutex_free (decode_bin->subtitle_lock);
+    decode_bin->subtitle_lock = NULL;
+  }
+
   G_OBJECT_CLASS (parent_class)->finalize (object);
 }
 
@@ -856,7 +881,7 @@
 
   GST_DEBUG_OBJECT (dbin, "Setting new encoding: %s", GST_STR_NULL (encoding));
 
-  GST_OBJECT_LOCK (dbin);
+  SUBTITLE_LOCK (dbin);
   g_free (dbin->encoding);
   dbin->encoding = g_strdup (encoding);
 
@@ -865,7 +890,7 @@
     g_object_set (G_OBJECT (walk->data), "subtitle-encoding", dbin->encoding,
         NULL);
   }
-  GST_OBJECT_UNLOCK (dbin);
+  SUBTITLE_UNLOCK (dbin);
 }
 
 static gchar *
@@ -875,9 +900,9 @@
 
   GST_DEBUG_OBJECT (dbin, "Getting currently set encoding");
 
-  GST_OBJECT_LOCK (dbin);
+  SUBTITLE_LOCK (dbin);
   encoding = g_strdup (dbin->encoding);
-  GST_OBJECT_UNLOCK (dbin);
+  SUBTITLE_UNLOCK (dbin);
 
   return encoding;
 }
@@ -1332,10 +1357,12 @@
     /* try to configure the subtitle encoding property when we can */
     if (g_object_class_find_property (G_OBJECT_GET_CLASS (element),
             "subtitle-encoding")) {
+      SUBTITLE_LOCK (dbin);
       GST_DEBUG_OBJECT (dbin,
           "setting subtitle-encoding=%s to element", dbin->encoding);
       g_object_set (G_OBJECT (element), "subtitle-encoding", dbin->encoding,
           NULL);
+      SUBTITLE_UNLOCK (dbin);
       subtitle = TRUE;
     } else
       subtitle = FALSE;
@@ -1362,11 +1389,11 @@
       continue;
     }
     if (subtitle) {
-      GST_OBJECT_LOCK (dbin);
+      SUBTITLE_LOCK (dbin);
       /* we added the element now, add it to the list of subtitle-encoding
        * elements when we can set the property */
       dbin->subtitles = g_list_prepend (dbin->subtitles, element);
-      GST_OBJECT_UNLOCK (dbin);
+      SUBTITLE_UNLOCK (dbin);
     }
 
     res = TRUE;
@@ -1861,10 +1888,10 @@
       gst_element_set_state (element, GST_STATE_NULL);
     }
 
-    GST_OBJECT_LOCK (chain->dbin);
+    SUBTITLE_LOCK (chain->dbin);
     /* remove possible subtitle element */
     chain->dbin->subtitles = g_list_remove (chain->dbin->subtitles, element);
-    GST_OBJECT_UNLOCK (chain->dbin);
+    SUBTITLE_UNLOCK (chain->dbin);
 
     if (!hide) {
       gst_object_unref (element);
