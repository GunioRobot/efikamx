diff -ruN gstreamer0.10-0.10.25/docs/gst/gstreamer-sections.txt gstreamer0.10-0.10.25.modified/docs/gst/gstreamer-sections.txt
--- gstreamer0.10-0.10.25/docs/gst/gstreamer-sections.txt	2010-04-15 09:59:58.000000000 +0800
+++ gstreamer0.10-0.10.25.modified/docs/gst/gstreamer-sections.txt	2010-04-15 10:14:04.000000000 +0800
@@ -223,7 +223,7 @@
 GST_MFWBUFFER_DEF_FINALIZE
 GST_MFWBUFFER_PRIVOBJ
 GST_MFWBUFFER_UID
-
+GST_MFWBUFFER_SUBBUF
 GST_GSTMFWBUFFER_SET_FINALIZE_CALLBACK
 
 GST_MFWBUFFER_TRACE_NAME
@@ -233,6 +233,7 @@
 gst_mfw_buffer_make_readonly
 gst_mfw_buffer_new
 gst_mfw_buffer_new_and_alloc
+gst_mfw_buffer_replace_sub_buffer
 mfw_buf_finalize_func
 
 <SUBSECTION Standard>
diff -ruN gstreamer0.10-0.10.25/gst/gstmfwbuffer.c gstreamer0.10-0.10.25.modified/gst/gstmfwbuffer.c
--- gstreamer0.10-0.10.25/gst/gstmfwbuffer.c	2010-04-15 09:59:58.000000000 +0800
+++ gstreamer0.10-0.10.25.modified/gst/gstmfwbuffer.c	2010-04-15 10:14:04.000000000 +0800
@@ -56,6 +56,10 @@
 static void gst_mfw_buffer_finalize (GstMfwBuffer * buffer);
 static GType _gst_mfw_buffer_type = 0;
 
+static int g_mfwbuffer_cnt = 0;
+static int g_mfwbuffer_max = 0;
+
+
 void open_allocator_dll()
 {
     char * errstr;
@@ -129,6 +133,11 @@
 
     /* actually free all resource when refcont not added finalize function */
     if (GST_MINI_OBJECT_REFCOUNT(buffer)==0){
+        if (buffer->sub_buf){
+            gst_buffer_unref(buffer->sub_buf);
+            buffer->sub_buf = NULL;
+        }
+        
         if (buffer->alloc_obj){
             if (buffer->flags&GST_MFW_BUFFER_FLAG_DMABLE){
                 (*g_free_hwbuf_handle)(buffer->alloc_obj);
@@ -138,6 +147,7 @@
             buffer->alloc_obj = NULL;
         }
         buffer->flags=0;
+        g_mfwbuffer_cnt--;
     }
 }
 
@@ -150,9 +160,15 @@
   buffer->virt_addr = NULL;
   buffer->alloc_obj = NULL;
   buffer->priv = NULL;
+  buffer->sub_buf = NULL;
   buffer->def_finalize = NULL;
   buffer->flags = 0;
   buffer->uid = -1;
+  g_mfwbuffer_cnt++;
+  if (g_mfwbuffer_cnt>g_mfwbuffer_max){
+    GST_CAT_LOG (GST_CAT_MFWBUFFER, "max mfwbuffer count %d\n", g_mfwbuffer_cnt);
+    g_mfwbuffer_max = g_mfwbuffer_cnt;
+  }
 }
 
 GstMfwBuffer *
@@ -220,3 +236,18 @@
     GST_MINI_OBJECT_FLAG_SET(buffer, GST_MINI_OBJECT_FLAG_READONLY);
 }
 
+void gst_mfw_buffer_replace_sub_buffer(GstMfwBuffer * buffer, GstBuffer * sub_buf)
+{
+    g_return_if_fail (buffer != NULL);
+
+    if (buffer->sub_buf){
+        gst_buffer_unref(buffer->sub_buf);
+    }
+
+    if (sub_buf){
+        gst_buffer_ref(sub_buf);
+    }
+
+    buffer->sub_buf = sub_buf;
+}
+
diff -ruN gstreamer0.10-0.10.25/gst/gstmfwbuffer.h gstreamer0.10-0.10.25.modified/gst/gstmfwbuffer.h
--- gstreamer0.10-0.10.25/gst/gstmfwbuffer.h	2010-04-15 09:59:58.000000000 +0800
+++ gstreamer0.10-0.10.25.modified/gst/gstmfwbuffer.h	2010-04-15 10:27:46.000000000 +0800
@@ -64,6 +64,7 @@
 #define GST_MFWBUFFER_VIRTADDRESS(buf) (GST_MFWBUFFER_CAST(buf)->virt_addr)
 #define GST_MFWBUFFER_DEF_FINALIZE(buf) (GST_MFWBUFFER_CAST(buf)->def_finalize)
 #define GST_MFWBUFFER_PRIVOBJ(buf)			(GST_MFWBUFFER_CAST(buf)->priv)
+#define GST_MFWBUFFER_SUBBUF(buf)			(GST_MFWBUFFER_CAST(buf)->sub_buf)
 #define GST_MFWBUFFER_UID(buf)			(GST_MFWBUFFER_CAST(buf)->uid)
 
 
@@ -88,6 +89,7 @@
     void * alloc_obj; /* same as virtaddr when sw buffer, hwbuf desc when hw buffer */
     void * priv; /* caller defined priv */
     mfw_buf_finalize_func def_finalize;
+    GstBuffer * sub_buf;
 };
 
 struct _GstMfwBufferClass {
@@ -102,6 +104,7 @@
 
 void gst_mfw_buffer_make_readonly(GstMfwBuffer * buffer);
 
+void gst_mfw_buffer_replace_sub_buffer(GstMfwBuffer * buffer, GstBuffer * sub_buf);
 
 G_END_DECLS
 
